{"version":3,"sources":["components/Text/index.js","components/Text/text2.js","components/Opciones/index.js","components/Opciones/opciones.js","components/Historial/index.js","components/Historial/historial.js","App.js","index.js"],"names":["Text","data","this","props","idx","historia","react","Component","Opciones","handleSelect","onSelect","opcion","className","isFinal","onClick","window","location","reload","toUpperCase","opciones","Historial","historial","pop","slice","map","e","buttons","ids","id","App","state","letter","setState","prev","indexOf","length","parseInt","pausarAll","pausarLetter","pausarBack","pauseLetters","pauseBack","timer","setInterval","tick","clearInterval","Math","floor","random","pauseAll","backColor","colorRandom","letterColor","style","color","backgroundColor","button","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.15844cf5.chunk.js","sourcesContent":["import Text from './text2'\r\n\r\nexport default Text","import react from 'react'\r\nimport data from '../data.json'\r\n\r\nclass Text extends react.Component{\r\n    // state = {\r\n    //     letterColor:[0,0,0],\r\n    //     backColor:[255,255,255],\r\n    //     pause:false\r\n    // }\r\n\r\n    \r\n    // componentDidMount() {           //Para q cambie cada siertos milisegundos\r\n    //     this.timer = setInterval(\r\n    //         () => this.tick(),\r\n    //         1000\r\n    //     );    \r\n    // }\r\n\r\n    // componentWillUnmount() {        \r\n    //     clearInterval(this.timer);\r\n    // }\r\n\r\n    // colorRandom () {               //Devuelve un array con 3 numeros entre 0 y 255\r\n    //     let arr = [];\r\n    //     for (let i=0;i<=2;i++){\r\n    //         arr.push(Math.floor(Math.random()*255))\r\n    //     }\r\n    //     return arr\r\n    //     //return [Math.floor(Math.random()*255),Math.floor(Math.random()*255),Math.floor(Math.random()*255)]\r\n    // }\r\n\r\n    // tick() {                       //actualiza el estado\r\n    //     if (!this.state.pause){\r\n    //         this.setState({\r\n    //         letterColor:this.colorRandom(),\r\n    //         backColor:this.colorRandom()\r\n    //         });\r\n    //     }\r\n    // }\r\n    // pausar = () => {\r\n    //     this.setState({pause:!this.state.pause})\r\n    // }\r\n\r\n    render(){\r\n        return (\r\n            <div>      \r\n                <h1>\r\n                    {data[this.props.idx].historia}\r\n                </h1>\r\n            </div>\r\n        )}\r\n}\r\n\r\nexport default Text","import Opciones from './opciones'\r\n\r\nexport default Opciones","import react from 'react'\r\nimport data from '../data.json'\r\n\r\nclass Opciones extends react.Component{   \r\n    handleSelect = () => {\r\n        this.props.onSelect(this.props.opcion)\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div className=\"opciones\">\r\n                {!this.props.isFinal?\r\n                <>\r\n                    <button onClick={this.handleSelect}>{this.props.opcion.toUpperCase()}</button>\r\n                    <h3>{data[this.props.idx].opciones[this.props.opcion]}</h3>\r\n                </>\r\n                :this.props.opcion==='a'?<button onClick={()=>window.location.reload()}>Quiere volver a jugar</button>:null}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Opciones","import Historial from './historial'\r\n\r\nexport default Historial","import react from 'react'\r\n\r\nclass Opcion extends react.Component{   \r\n    render(){\r\n        return (\r\n            <div className=\"historial\">\r\n                <p>Seleccion anterior: {[...this.props.historial].pop()?.toUpperCase()}</p>\r\n                <p>Historial de opciones elegidas:</p>\r\n                <ul>\r\n                    {this.props.historial.slice(0,-1).map((e,idx)=>{\r\n                        return <li key={idx}>{e.toUpperCase()}</li>\r\n                    })}\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Opcion","import Text from './components/Text'\nimport Opciones from './components/Opciones'\nimport Historial from './components/Historial'\nimport react from 'react';\nimport data from './components/data.json'\n\nconst buttons = [     //Para mapear los buttons con sus opciones\n  {opcion: 'a'},  \n  {opcion: 'b'}\n]\nconst ids = data.map(e => e.id) //Array con los IDs de los objetos de data\n\nclass App extends react.Component {\n  state = {\n    historial: [],  //Historial de elecciones\n    idx: 0,         //Index en el objeto data que renderizamos\n    isFinal:false,   //Ultima eleccion\n  };\n\n  componentDidMount() {           //Para q cambie cada siertos milisegundos\n    this.timer = setInterval(\n        () => this.tick(),\n        500\n    );    \n  }\n  componentWillUnmount() {        \n      clearInterval(this.timer);\n  }\n\n  handleSelect = (letter) =>{\n    this.setState((prev)=>{\n      let newState = {\n        historial: [...prev.historial, letter],                          //Suma la tetra a historia\n        idx: ids.indexOf((prev.historial.length+2)+letter),              //Calcula el el idx de la sig opcion\n        isFinal: (prev.historial.length+2)===parseInt([...ids].pop()[0]) //Comprueba si esta en la ultima opcion\n      } \n      return newState\n    })\n  }\n\n  colorRandom () {               //Devuelve un array con 3 numeros entre 0 y 255\n    return [Math.floor(Math.random()*255),Math.floor(Math.random()*255),Math.floor(Math.random()*255)]\n  }\n\n  tick() {                       //actualiza el estado\n    if (!this.state.pauseAll){\n      if (!this.state.pauseLetters){\n        this.setState({\n          backColor:this.colorRandom()\n        })\n      }\n      if (!this.state.pauseBack){\n        this.setState({\n          letterColor:this.colorRandom()\n        })\n      }\n    }\n  }\n\n  pausarAll = () => {\n    this.pausarLetter()\n    this.pausarBack()\n  }\n  pausarLetter = () => {\n    this.setState({pauseLetters:!this.state.pauseLetters})\n  }\n  pausarBack = () => {\n    this.setState({pauseBack:!this.state.pauseBack})\n  }\n\n  render(){\n    return (\n      <div className=\"App\" style={\n                          {color:`rgb(${this.state.letterColor})`,\n                          backgroundColor: `rgb(${this.state.backColor})`}}>\n        <Text \n          idx={this.state.idx}                            //Index en data del objeto que corresponde\n        />\n\n        {buttons.map((button) =>\n                <Opciones \n                  opcion={button.opcion}                  //Letra de opcion\n                  idx={this.state.idx}                    //Index en data del objeto que corresponde\n                  isFinal={this.state.isFinal}            //Para q cuando sea el final camibe \n                  onSelect={this.handleSelect}            //Para poder renderizar cuando precione los botones\n                  key={button.opcion}                     //Keys necesarias en un map\n                />\n        )}\n\n        <Historial \n        historial={this.state.historial}                  //Historial de las elecciones\n        />\n        <button onClick={this.pausarAll}>Pausar todo</button>\n        <button onClick={this.pausarLetter}>Pausar color back</button>\n        <button onClick={this.pausarBack}>Pausar color letra</button>\n      </div>\n    );\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}